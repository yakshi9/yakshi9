class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<Integer> ds = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        boolean[] freq = new boolean[nums.length];
        permutation(ds,ans,nums,freq);
        return ans;
        
    }

    public void permutation(List<Integer>ds, List<List<Integer>> ans, int[] nums, boolean[] freq)
    {
        if(ds.size() == nums.length)
        {
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i = 0; i < nums.length; i++)
        {
            if(!freq[i])
            {
                freq[i] = true;    
                ds.add(nums[i]);
                permutation(ds,ans,nums,freq);
                ds.remove(ds.size()-1);
                freq[i] = false;
            }
        }

    }
}
